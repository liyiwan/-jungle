<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC  
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"  
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<sql-query name="GoodsToCheck">
		<![CDATA[
			SELECT Goods.GoodsID AS GoodsId, 
			       Goods.GoodsNO AS GoodsNo, 
			       Goods.GoodsName AS GoodsName, 
			       Goods.FlagID AS FlagId, 
			       Goods.bMultiSpec AS MultiSpec,
			       MyGoods.PicPath AS PicPath,
			       SUM(G_Stock_Spec.Stock) AS Stock
			FROM   G_Goods_GoodsList Goods 
			       LEFT JOIN J_MyGoods MyGoods ON MyGoods.GoodsId = Goods.GoodsID
			       LEFT JOIN G_Stock_Spec ON G_Stock_Spec.GoodsID = Goods.GoodsID
			WHERE  MyGoods.CheckDate IS NULL OR datediff(hh,MyGoods.CheckDate,GETDATE()) > 24 
			GROUP BY Goods.GoodsID,Goods.GoodsNO,Goods.GoodsName,Goods.FlagID,Goods.bMultiSpec,MyGoods.PicPath
		]]>
	</sql-query>
	<sql-query name="NotOnSaleGoods">
		<![CDATA[
			SELECT G_Goods_GoodsList.GoodsID AS GoodsId,G_Goods_GoodsList.GoodsNO AS GoodsNo,G_Goods_GoodsList.GoodsName AS GoodsName
			FROM G_Goods_GoodsList LEFT JOIN J_MyGoods ON G_Goods_GoodsList.GoodsID=J_MyGoods.GoodsID
			WHERE J_MyGoods.PicPath IS NULL OR J_MyGoods.PicPath = ''
		]]>
	</sql-query>
	<sql-query name="AllGoods">
		<![CDATA[
			SELECT G_Goods_GoodsList.GoodsID AS GoodsId,
			       G_Goods_GoodsList.GoodsNO AS GoodsNo,
			       G_Goods_GoodsList.FlagID AS FlagId, 
			       G_Goods_GoodsList.GoodsName AS GoodsName,
			       J_MyGoods.PicPath AS PicPath,
			       (SELECT ISNULL(SUM(stock),0) FROM G_Stock_Spec WHERE GoodsID = G_Goods_GoodsList.GoodsID) AS Stock,
			       (SELECT ISNULL(SUM(SellCount),0) FROM G_sta_SellDay WHERE GoodsID = G_Goods_GoodsList.GoodsID AND datediff(day, staDay, getdate()) < 31) AS SellCountMonth,
			       (CASE WHEN G_Goods_GoodsList.bFixCost = 1 THEN G_Goods_GoodsList.FixCostPrice ELSE ISNULL(G_Goods_PriceCost.PriceCost,0) END) AS CostPrice
			 FROM G_Goods_GoodsList 
			      LEFT JOIN J_MyGoods ON J_MyGoods.GoodsID = G_Goods_GoodsList.GoodsID
			      LEFT JOIN G_Goods_PriceCost ON G_Goods_PriceCost.GoodsID = G_Goods_GoodsList.GoodsID AND G_Goods_PriceCost.WareHouseID = 1000
			 WHERE G_Goods_GoodsList.GoodsNO LIKE :searchTerm OR G_Goods_GoodsList.GoodsName LIKE :searchTerm
			 ORDER BY G_Goods_GoodsList.GoodsID DESC
		]]>
	</sql-query>
	<sql-query name="SingleGoods">
		<![CDATA[
			SELECT G_Goods_GoodsList.GoodsID AS GoodsId,
			       G_Goods_GoodsList.GoodsNO AS GoodsNo,
			       G_Goods_GoodsList.FlagID AS FlagId, 
			       G_Goods_GoodsList.GoodsName AS GoodsName,
			       G_Goods_GoodsList.bMultiSpec AS MultiSpec,
			       J_MyGoods.PicPath AS PicPath,
			       (SELECT ISNULL(SUM(stock),0) FROM G_Stock_Spec WHERE GoodsID = G_Goods_GoodsList.GoodsID) AS Stock,
			       (SELECT ISNULL(SUM(SellCount),0) FROM G_sta_SellDay WHERE GoodsID = G_Goods_GoodsList.GoodsID AND datediff(day, staDay, getdate()) < 31) AS SellCountMonth,
			       (CASE WHEN G_Goods_GoodsList.bFixCost = 1 THEN G_Goods_GoodsList.FixCostPrice ELSE ISNULL(G_Goods_PriceCost.PriceCost,0) END) AS CostPrice
			 FROM G_Goods_GoodsList 
			      LEFT JOIN J_MyGoods ON J_MyGoods.GoodsID = G_Goods_GoodsList.GoodsID
			      LEFT JOIN G_Goods_PriceCost ON G_Goods_PriceCost.GoodsID = G_Goods_GoodsList.GoodsID AND G_Goods_PriceCost.WareHouseID = 1000 AND G_Goods_PriceCost.RecID = (SELECT MAX(RecID) FROM G_Goods_PriceCost WHERE G_Goods_PriceCost.GoodsID = G_Goods_GoodsList.GoodsID AND G_Goods_PriceCost.WareHouseID = 1000)
			 WHERE G_Goods_GoodsList.GoodsID = :goodsId
		]]>
	</sql-query>
	<sql-query name="SingleGoodsByGoodsNo">
		<![CDATA[
			SELECT G_Goods_GoodsList.GoodsID AS GoodsId,
			       G_Goods_GoodsList.GoodsNO AS GoodsNo,
			       G_Goods_GoodsList.GoodsName AS GoodsName,
			       G_Goods_GoodsList.bMultiSpec AS MultiSpec,
			       J_MyGoods.PicPath AS PicPath,
			       (SELECT ISNULL(SUM(stock),0) FROM G_Stock_Spec WHERE GoodsID = G_Goods_GoodsList.GoodsID) AS Stock,
			       (SELECT ISNULL(SUM(SellCount),0) FROM G_sta_SellDay WHERE GoodsID = G_Goods_GoodsList.GoodsID AND datediff(day, staDay, getdate()) < 31) AS SellCountMonth,
			       (CASE WHEN G_Goods_GoodsList.bFixCost = 1 THEN G_Goods_GoodsList.FixCostPrice ELSE ISNULL(G_Goods_PriceCost.PriceCost,0) END) AS CostPrice
			 FROM G_Goods_GoodsList 
			      LEFT JOIN J_MyGoods ON J_MyGoods.GoodsID = G_Goods_GoodsList.GoodsID
			      LEFT JOIN G_Goods_PriceCost ON G_Goods_PriceCost.GoodsID = G_Goods_GoodsList.GoodsID AND G_Goods_PriceCost.WareHouseID = 1000
			 WHERE G_Goods_GoodsList.GoodsNO = :goodsNo
		]]>
	</sql-query>
	<sql-query name="GoodsSpecList">
		<![CDATA[
			SELECT GoodsID AS GoodsId, 
				   SpecID AS SpecId, 
				   SpecCode AS SpecCode, 
				   SpecName AS SpecName, 
				   FlagID AS FlagId,
				   (SELECT SUM(Stock) FROM G_Stock_Spec WHERE G_Stock_Spec.GoodsID = G_Goods_GoodsSpec.GoodsID AND G_Stock_Spec.SpecID = G_Goods_GoodsSpec.SpecID) AS Stock
		    FROM   G_Goods_GoodsSpec
		    WHERE  GoodsID = :goodsId
		]]>
	</sql-query>
	<sql-query name="ThirdPartyGoodsList">
		<![CDATA[
			SELECT TradeGoodsNO,TradeGoodsName,TradeGoodsSpec,SUM(GoodsCount) AS GoodsCount
			FROM
				(
				SELECT G_API_TradeGoods.* FROM G_API_TradeGoods, G_API_TradeList
				WHERE G_API_TradeGoods.BillID = G_API_TradeList.BillID AND G_API_TradeList.curStatus = 4 AND G_API_TradeList.SynStatus = 0 AND G_API_TradeList.TradeID = 0
				UNION
				SELECT G_API_TradeGoods.* FROM G_API_TradeGoods, G_API_TradeList, G_Trade_TradeList
				WHERE G_API_TradeGoods.BillID = G_API_TradeList.BillID AND G_API_TradeList.TradeID = G_Trade_TradeList.TradeID AND G_API_TradeList.curStatus = 4 AND G_API_TradeList.SynStatus = 0 AND G_API_TradeList.TradeID <> 0 AND (G_Trade_TradeList.TradeStatus >= 2 AND G_Trade_TradeList.TradeStatus <= 5)
				) T
			WHERE TradeGoodsNO LIKE 'ID-%'
			GROUP BY TradeGoodsNO,TradeGoodsName,TradeGoodsSpec
		]]>
	</sql-query>
</hibernate-mapping>
